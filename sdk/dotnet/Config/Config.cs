// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;

namespace Pulumi.Grafana
{
    public static class Config
    {
        private static readonly Pulumi.Config __config = new Pulumi.Config("grafana");
        /// <summary>
        /// API token or basic auth username:password. May alternatively be set via the `GRAFANA_AUTH` environment variable.
        /// </summary>
        public static string? Auth { get; set; } = __config.Get("auth");

        /// <summary>
        /// Certificate CA bundle to use to verify the Grafana server's certificate. May alternatively be set via the
        /// `GRAFANA_CA_CERT` environment variable.
        /// </summary>
        public static string? CaCert { get; set; } = __config.Get("caCert");

        /// <summary>
        /// Skip TLS certificate verification. May alternatively be set via the `GRAFANA_INSECURE_SKIP_VERIFY` environment variable.
        /// </summary>
        public static bool? InsecureSkipVerify { get; set; } = __config.GetBoolean("insecureSkipVerify");

        /// <summary>
        /// The organization id to operate on within grafana. May alternatively be set via the `GRAFANA_ORG_ID` environment
        /// variable.
        /// </summary>
        public static int? OrgId { get; set; } = __config.GetInt32("orgId");

        /// <summary>
        /// Client TLS certificate file to use to authenticate to the Grafana server. May alternatively be set via the
        /// `GRAFANA_TLS_CERT` environment variable.
        /// </summary>
        public static string? TlsCert { get; set; } = __config.Get("tlsCert");

        /// <summary>
        /// Client TLS key file to use to authenticate to the Grafana server. May alternatively be set via the `GRAFANA_TLS_CERT`
        /// environment variable.
        /// </summary>
        public static string? TlsKey { get; set; } = __config.Get("tlsKey");

        /// <summary>
        /// The root URL of a Grafana server. May alternatively be set via the `GRAFANA_URL` environment variable.
        /// </summary>
        public static string? Url { get; set; } = __config.Get("url");

    }
}
