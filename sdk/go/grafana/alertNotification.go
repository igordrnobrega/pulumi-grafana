// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlertNotification struct {
	pulumi.CustomResourceState

	// Whether to disable sending resolve messages.
	DisableResolveMessage pulumi.BoolPtrOutput `pulumi:"disableResolveMessage"`
	// Frequency of alert reminders. Frequency must be set if reminders are enabled.
	Frequency pulumi.StringPtrOutput `pulumi:"frequency"`
	// Is this the default channel for all your alerts.
	IsDefault pulumi.BoolPtrOutput `pulumi:"isDefault"`
	// The name of the alert notification channel.
	Name pulumi.StringOutput `pulumi:"name"`
	// Additional secure settings, for full reference lookup [Grafana Supported Settings
	// documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings pulumi.MapOutput `pulumi:"secureSettings"`
	// Whether to send reminders for triggered alerts.
	SendReminder pulumi.BoolPtrOutput `pulumi:"sendReminder"`
	// Additional settings, for full reference see [Grafana HTTP API
	// documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings pulumi.MapOutput `pulumi:"settings"`
	// The type of the alert notification channel.
	Type pulumi.StringOutput `pulumi:"type"`
	// Unique identifier. If unset, this will be automatically generated.
	Uid pulumi.StringOutput `pulumi:"uid"`
}

// NewAlertNotification registers a new resource with the given unique name, arguments, and options.
func NewAlertNotification(ctx *pulumi.Context,
	name string, args *AlertNotificationArgs, opts ...pulumi.ResourceOption) (*AlertNotification, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource AlertNotification
	err := ctx.RegisterResource("grafana:index/alertNotification:AlertNotification", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertNotification gets an existing AlertNotification resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertNotification(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertNotificationState, opts ...pulumi.ResourceOption) (*AlertNotification, error) {
	var resource AlertNotification
	err := ctx.ReadResource("grafana:index/alertNotification:AlertNotification", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertNotification resources.
type alertNotificationState struct {
	// Whether to disable sending resolve messages.
	DisableResolveMessage *bool `pulumi:"disableResolveMessage"`
	// Frequency of alert reminders. Frequency must be set if reminders are enabled.
	Frequency *string `pulumi:"frequency"`
	// Is this the default channel for all your alerts.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the alert notification channel.
	Name *string `pulumi:"name"`
	// Additional secure settings, for full reference lookup [Grafana Supported Settings
	// documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings map[string]interface{} `pulumi:"secureSettings"`
	// Whether to send reminders for triggered alerts.
	SendReminder *bool `pulumi:"sendReminder"`
	// Additional settings, for full reference see [Grafana HTTP API
	// documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings map[string]interface{} `pulumi:"settings"`
	// The type of the alert notification channel.
	Type *string `pulumi:"type"`
	// Unique identifier. If unset, this will be automatically generated.
	Uid *string `pulumi:"uid"`
}

type AlertNotificationState struct {
	// Whether to disable sending resolve messages.
	DisableResolveMessage pulumi.BoolPtrInput
	// Frequency of alert reminders. Frequency must be set if reminders are enabled.
	Frequency pulumi.StringPtrInput
	// Is this the default channel for all your alerts.
	IsDefault pulumi.BoolPtrInput
	// The name of the alert notification channel.
	Name pulumi.StringPtrInput
	// Additional secure settings, for full reference lookup [Grafana Supported Settings
	// documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings pulumi.MapInput
	// Whether to send reminders for triggered alerts.
	SendReminder pulumi.BoolPtrInput
	// Additional settings, for full reference see [Grafana HTTP API
	// documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings pulumi.MapInput
	// The type of the alert notification channel.
	Type pulumi.StringPtrInput
	// Unique identifier. If unset, this will be automatically generated.
	Uid pulumi.StringPtrInput
}

func (AlertNotificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertNotificationState)(nil)).Elem()
}

type alertNotificationArgs struct {
	// Whether to disable sending resolve messages.
	DisableResolveMessage *bool `pulumi:"disableResolveMessage"`
	// Frequency of alert reminders. Frequency must be set if reminders are enabled.
	Frequency *string `pulumi:"frequency"`
	// Is this the default channel for all your alerts.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the alert notification channel.
	Name *string `pulumi:"name"`
	// Additional secure settings, for full reference lookup [Grafana Supported Settings
	// documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings map[string]interface{} `pulumi:"secureSettings"`
	// Whether to send reminders for triggered alerts.
	SendReminder *bool `pulumi:"sendReminder"`
	// Additional settings, for full reference see [Grafana HTTP API
	// documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings map[string]interface{} `pulumi:"settings"`
	// The type of the alert notification channel.
	Type string `pulumi:"type"`
	// Unique identifier. If unset, this will be automatically generated.
	Uid *string `pulumi:"uid"`
}

// The set of arguments for constructing a AlertNotification resource.
type AlertNotificationArgs struct {
	// Whether to disable sending resolve messages.
	DisableResolveMessage pulumi.BoolPtrInput
	// Frequency of alert reminders. Frequency must be set if reminders are enabled.
	Frequency pulumi.StringPtrInput
	// Is this the default channel for all your alerts.
	IsDefault pulumi.BoolPtrInput
	// The name of the alert notification channel.
	Name pulumi.StringPtrInput
	// Additional secure settings, for full reference lookup [Grafana Supported Settings
	// documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings pulumi.MapInput
	// Whether to send reminders for triggered alerts.
	SendReminder pulumi.BoolPtrInput
	// Additional settings, for full reference see [Grafana HTTP API
	// documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings pulumi.MapInput
	// The type of the alert notification channel.
	Type pulumi.StringInput
	// Unique identifier. If unset, this will be automatically generated.
	Uid pulumi.StringPtrInput
}

func (AlertNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertNotificationArgs)(nil)).Elem()
}

type AlertNotificationInput interface {
	pulumi.Input

	ToAlertNotificationOutput() AlertNotificationOutput
	ToAlertNotificationOutputWithContext(ctx context.Context) AlertNotificationOutput
}

func (*AlertNotification) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertNotification)(nil))
}

func (i *AlertNotification) ToAlertNotificationOutput() AlertNotificationOutput {
	return i.ToAlertNotificationOutputWithContext(context.Background())
}

func (i *AlertNotification) ToAlertNotificationOutputWithContext(ctx context.Context) AlertNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertNotificationOutput)
}

func (i *AlertNotification) ToAlertNotificationPtrOutput() AlertNotificationPtrOutput {
	return i.ToAlertNotificationPtrOutputWithContext(context.Background())
}

func (i *AlertNotification) ToAlertNotificationPtrOutputWithContext(ctx context.Context) AlertNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertNotificationPtrOutput)
}

type AlertNotificationPtrInput interface {
	pulumi.Input

	ToAlertNotificationPtrOutput() AlertNotificationPtrOutput
	ToAlertNotificationPtrOutputWithContext(ctx context.Context) AlertNotificationPtrOutput
}

type alertNotificationPtrType AlertNotificationArgs

func (*alertNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertNotification)(nil))
}

func (i *alertNotificationPtrType) ToAlertNotificationPtrOutput() AlertNotificationPtrOutput {
	return i.ToAlertNotificationPtrOutputWithContext(context.Background())
}

func (i *alertNotificationPtrType) ToAlertNotificationPtrOutputWithContext(ctx context.Context) AlertNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertNotificationPtrOutput)
}

// AlertNotificationArrayInput is an input type that accepts AlertNotificationArray and AlertNotificationArrayOutput values.
// You can construct a concrete instance of `AlertNotificationArrayInput` via:
//
//          AlertNotificationArray{ AlertNotificationArgs{...} }
type AlertNotificationArrayInput interface {
	pulumi.Input

	ToAlertNotificationArrayOutput() AlertNotificationArrayOutput
	ToAlertNotificationArrayOutputWithContext(context.Context) AlertNotificationArrayOutput
}

type AlertNotificationArray []AlertNotificationInput

func (AlertNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AlertNotification)(nil))
}

func (i AlertNotificationArray) ToAlertNotificationArrayOutput() AlertNotificationArrayOutput {
	return i.ToAlertNotificationArrayOutputWithContext(context.Background())
}

func (i AlertNotificationArray) ToAlertNotificationArrayOutputWithContext(ctx context.Context) AlertNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertNotificationArrayOutput)
}

// AlertNotificationMapInput is an input type that accepts AlertNotificationMap and AlertNotificationMapOutput values.
// You can construct a concrete instance of `AlertNotificationMapInput` via:
//
//          AlertNotificationMap{ "key": AlertNotificationArgs{...} }
type AlertNotificationMapInput interface {
	pulumi.Input

	ToAlertNotificationMapOutput() AlertNotificationMapOutput
	ToAlertNotificationMapOutputWithContext(context.Context) AlertNotificationMapOutput
}

type AlertNotificationMap map[string]AlertNotificationInput

func (AlertNotificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AlertNotification)(nil))
}

func (i AlertNotificationMap) ToAlertNotificationMapOutput() AlertNotificationMapOutput {
	return i.ToAlertNotificationMapOutputWithContext(context.Background())
}

func (i AlertNotificationMap) ToAlertNotificationMapOutputWithContext(ctx context.Context) AlertNotificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertNotificationMapOutput)
}

type AlertNotificationOutput struct {
	*pulumi.OutputState
}

func (AlertNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertNotification)(nil))
}

func (o AlertNotificationOutput) ToAlertNotificationOutput() AlertNotificationOutput {
	return o
}

func (o AlertNotificationOutput) ToAlertNotificationOutputWithContext(ctx context.Context) AlertNotificationOutput {
	return o
}

func (o AlertNotificationOutput) ToAlertNotificationPtrOutput() AlertNotificationPtrOutput {
	return o.ToAlertNotificationPtrOutputWithContext(context.Background())
}

func (o AlertNotificationOutput) ToAlertNotificationPtrOutputWithContext(ctx context.Context) AlertNotificationPtrOutput {
	return o.ApplyT(func(v AlertNotification) *AlertNotification {
		return &v
	}).(AlertNotificationPtrOutput)
}

type AlertNotificationPtrOutput struct {
	*pulumi.OutputState
}

func (AlertNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertNotification)(nil))
}

func (o AlertNotificationPtrOutput) ToAlertNotificationPtrOutput() AlertNotificationPtrOutput {
	return o
}

func (o AlertNotificationPtrOutput) ToAlertNotificationPtrOutputWithContext(ctx context.Context) AlertNotificationPtrOutput {
	return o
}

type AlertNotificationArrayOutput struct{ *pulumi.OutputState }

func (AlertNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertNotification)(nil))
}

func (o AlertNotificationArrayOutput) ToAlertNotificationArrayOutput() AlertNotificationArrayOutput {
	return o
}

func (o AlertNotificationArrayOutput) ToAlertNotificationArrayOutputWithContext(ctx context.Context) AlertNotificationArrayOutput {
	return o
}

func (o AlertNotificationArrayOutput) Index(i pulumi.IntInput) AlertNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertNotification {
		return vs[0].([]AlertNotification)[vs[1].(int)]
	}).(AlertNotificationOutput)
}

type AlertNotificationMapOutput struct{ *pulumi.OutputState }

func (AlertNotificationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AlertNotification)(nil))
}

func (o AlertNotificationMapOutput) ToAlertNotificationMapOutput() AlertNotificationMapOutput {
	return o
}

func (o AlertNotificationMapOutput) ToAlertNotificationMapOutputWithContext(ctx context.Context) AlertNotificationMapOutput {
	return o
}

func (o AlertNotificationMapOutput) MapIndex(k pulumi.StringInput) AlertNotificationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AlertNotification {
		return vs[0].(map[string]AlertNotification)[vs[1].(string)]
	}).(AlertNotificationOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertNotificationOutput{})
	pulumi.RegisterOutputType(AlertNotificationPtrOutput{})
	pulumi.RegisterOutputType(AlertNotificationArrayOutput{})
	pulumi.RegisterOutputType(AlertNotificationMapOutput{})
}
