// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

// API token or basic auth username:password. May alternatively be set via the `GRAFANA_AUTH` environment variable.
func GetAuth(ctx *pulumi.Context) string {
	return config.Get(ctx, "grafana:auth")
}

// Certificate CA bundle to use to verify the Grafana server's certificate. May alternatively be set via the
// `GRAFANA_CA_CERT` environment variable.
func GetCaCert(ctx *pulumi.Context) string {
	return config.Get(ctx, "grafana:caCert")
}

// Skip TLS certificate verification. May alternatively be set via the `GRAFANA_INSECURE_SKIP_VERIFY` environment variable.
func GetInsecureSkipVerify(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "grafana:insecureSkipVerify")
}

// The organization id to operate on within grafana. May alternatively be set via the `GRAFANA_ORG_ID` environment
// variable.
func GetOrgId(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "grafana:orgId")
}

// Client TLS certificate file to use to authenticate to the Grafana server. May alternatively be set via the
// `GRAFANA_TLS_CERT` environment variable.
func GetTlsCert(ctx *pulumi.Context) string {
	return config.Get(ctx, "grafana:tlsCert")
}

// Client TLS key file to use to authenticate to the Grafana server. May alternatively be set via the `GRAFANA_TLS_CERT`
// environment variable.
func GetTlsKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "grafana:tlsKey")
}

// The root URL of a Grafana server. May alternatively be set via the `GRAFANA_URL` environment variable.
func GetUrl(ctx *pulumi.Context) string {
	return config.Get(ctx, "grafana:url")
}
