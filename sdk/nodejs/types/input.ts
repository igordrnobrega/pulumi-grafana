// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface BuiltinRoleAssignmentRole {
    global?: pulumi.Input<boolean>;
    uid: pulumi.Input<string>;
}

export interface DashboardPermissionPermission {
    permission: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    teamId?: pulumi.Input<number>;
    userId?: pulumi.Input<number>;
}

export interface DataSourceJsonData {
    assumeRoleArn?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    authenticationType?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    connMaxLifetime?: pulumi.Input<number>;
    customMetricsNamespaces?: pulumi.Input<string>;
    defaultProject?: pulumi.Input<string>;
    defaultRegion?: pulumi.Input<string>;
    encrypt?: pulumi.Input<string>;
    esVersion?: pulumi.Input<number>;
    graphiteVersion?: pulumi.Input<string>;
    httpMethod?: pulumi.Input<string>;
    interval?: pulumi.Input<string>;
    logLevelField?: pulumi.Input<string>;
    logMessageField?: pulumi.Input<string>;
    maxIdleConns?: pulumi.Input<number>;
    maxOpenConns?: pulumi.Input<number>;
    postgresVersion?: pulumi.Input<number>;
    profile?: pulumi.Input<string>;
    queryTimeout?: pulumi.Input<string>;
    sslMode?: pulumi.Input<string>;
    timeField?: pulumi.Input<string>;
    timeInterval?: pulumi.Input<string>;
    timescaledb?: pulumi.Input<boolean>;
    tlsAuth?: pulumi.Input<boolean>;
    tlsAuthWithCaCert?: pulumi.Input<boolean>;
    tlsSkipVerify?: pulumi.Input<boolean>;
    tokenUri?: pulumi.Input<string>;
    tsdbResolution?: pulumi.Input<string>;
    tsdbVersion?: pulumi.Input<string>;
}

export interface DataSourceSecureJsonData {
    accessKey?: pulumi.Input<string>;
    basicAuthPassword?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    tlsCaCert?: pulumi.Input<string>;
    tlsClientCert?: pulumi.Input<string>;
    tlsClientKey?: pulumi.Input<string>;
}

export interface FolderPermissionPermission {
    permission: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    teamId?: pulumi.Input<number>;
    userId?: pulumi.Input<number>;
}

export interface RolePermission {
    action: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}
