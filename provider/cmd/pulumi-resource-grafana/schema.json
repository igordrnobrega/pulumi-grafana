{
    "name": "grafana",
    "description": "A Pulumi package for creating and managing grafana cloud resources.",
    "keywords": [
        "pulumi",
        "grafana"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`grafana` Terraform Provider](https://github.com/terraform-providers/terraform-provider-grafana).",
    "repository": "https://github.com/pulumi/pulumi-grafana",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "auth": {
                "type": "string",
                "description": "API token or basic auth username:password. May alternatively be set via the `GRAFANA_AUTH` environment variable.\n"
            },
            "caCert": {
                "type": "string",
                "description": "Certificate CA bundle to use to verify the Grafana server's certificate. May alternatively be set via the\n`GRAFANA_CA_CERT` environment variable.\n"
            },
            "insecureSkipVerify": {
                "type": "boolean",
                "description": "Skip TLS certificate verification. May alternatively be set via the `GRAFANA_INSECURE_SKIP_VERIFY` environment variable.\n"
            },
            "orgId": {
                "type": "integer",
                "description": "The organization id to operate on within grafana. May alternatively be set via the `GRAFANA_ORG_ID` environment\nvariable.\n"
            },
            "tlsCert": {
                "type": "string",
                "description": "Client TLS certificate file to use to authenticate to the Grafana server. May alternatively be set via the\n`GRAFANA_TLS_CERT` environment variable.\n"
            },
            "tlsKey": {
                "type": "string",
                "description": "Client TLS key file to use to authenticate to the Grafana server. May alternatively be set via the `GRAFANA_TLS_CERT`\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The root URL of a Grafana server. May alternatively be set via the `GRAFANA_URL` environment variable.\n"
            }
        },
        "defaults": [
            "auth",
            "orgId",
            "url"
        ]
    },
    "types": {
        "grafana:index/BuiltinRoleAssignmentRole:BuiltinRoleAssignmentRole": {
            "properties": {
                "global": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "uid"
            ]
        },
        "grafana:index/DashboardPermissionPermission:DashboardPermissionPermission": {
            "properties": {
                "permission": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "permission"
            ]
        },
        "grafana:index/DataSourceJsonData:DataSourceJsonData": {
            "properties": {
                "assumeRoleArn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connMaxLifetime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customMetricsNamespaces": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultProject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultRegion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encrypt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "esVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "graphiteVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevelField": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageField": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIdleConns": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOpenConns": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postgresVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeField": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsAuthWithCaCert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsSkipVerify": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tsdbResolution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tsdbVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "grafana:index/DataSourceSecureJsonData:DataSourceSecureJsonData": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCaCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "grafana:index/FolderPermissionPermission:FolderPermissionPermission": {
            "properties": {
                "permission": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "permission"
            ]
        },
        "grafana:index/RolePermission:RolePermission": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the grafana package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "auth": {
                "type": "string",
                "description": "API token or basic auth username:password. May alternatively be set via the `GRAFANA_AUTH` environment variable.\n"
            },
            "caCert": {
                "type": "string",
                "description": "Certificate CA bundle to use to verify the Grafana server's certificate. May alternatively be set via the\n`GRAFANA_CA_CERT` environment variable.\n"
            },
            "insecureSkipVerify": {
                "type": "boolean",
                "description": "Skip TLS certificate verification. May alternatively be set via the `GRAFANA_INSECURE_SKIP_VERIFY` environment variable.\n"
            },
            "orgId": {
                "type": "integer",
                "description": "The organization id to operate on within grafana. May alternatively be set via the `GRAFANA_ORG_ID` environment\nvariable.\n"
            },
            "tlsCert": {
                "type": "string",
                "description": "Client TLS certificate file to use to authenticate to the Grafana server. May alternatively be set via the\n`GRAFANA_TLS_CERT` environment variable.\n"
            },
            "tlsKey": {
                "type": "string",
                "description": "Client TLS key file to use to authenticate to the Grafana server. May alternatively be set via the `GRAFANA_TLS_CERT`\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The root URL of a Grafana server. May alternatively be set via the `GRAFANA_URL` environment variable.\n"
            }
        },
        "required": [
            "auth",
            "orgId",
            "url"
        ],
        "inputProperties": {
            "auth": {
                "type": "string",
                "description": "API token or basic auth username:password. May alternatively be set via the `GRAFANA_AUTH` environment variable.\n"
            },
            "caCert": {
                "type": "string",
                "description": "Certificate CA bundle to use to verify the Grafana server's certificate. May alternatively be set via the\n`GRAFANA_CA_CERT` environment variable.\n"
            },
            "insecureSkipVerify": {
                "type": "boolean",
                "description": "Skip TLS certificate verification. May alternatively be set via the `GRAFANA_INSECURE_SKIP_VERIFY` environment variable.\n"
            },
            "orgId": {
                "type": "integer",
                "description": "The organization id to operate on within grafana. May alternatively be set via the `GRAFANA_ORG_ID` environment\nvariable.\n"
            },
            "tlsCert": {
                "type": "string",
                "description": "Client TLS certificate file to use to authenticate to the Grafana server. May alternatively be set via the\n`GRAFANA_TLS_CERT` environment variable.\n"
            },
            "tlsKey": {
                "type": "string",
                "description": "Client TLS key file to use to authenticate to the Grafana server. May alternatively be set via the `GRAFANA_TLS_CERT`\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The root URL of a Grafana server. May alternatively be set via the `GRAFANA_URL` environment variable.\n"
            }
        },
        "requiredInputs": [
            "auth",
            "orgId",
            "url"
        ]
    },
    "resources": {
        "grafana:index/alertNotification:AlertNotification": {
            "properties": {
                "disableResolveMessage": {
                    "type": "boolean",
                    "description": "Whether to disable sending resolve messages.\n"
                },
                "frequency": {
                    "type": "string",
                    "description": "Frequency of alert reminders. Frequency must be set if reminders are enabled.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Is this the default channel for all your alerts.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the alert notification channel.\n"
                },
                "secureSettings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Additional secure settings, for full reference lookup [Grafana Supported Settings\ndocumentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).\n"
                },
                "sendReminder": {
                    "type": "boolean",
                    "description": "Whether to send reminders for triggered alerts.\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Additional settings, for full reference see [Grafana HTTP API\ndocumentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the alert notification channel.\n"
                },
                "uid": {
                    "type": "string",
                    "description": "Unique identifier. If unset, this will be automatically generated.\n"
                }
            },
            "required": [
                "name",
                "type",
                "uid"
            ],
            "inputProperties": {
                "disableResolveMessage": {
                    "type": "boolean",
                    "description": "Whether to disable sending resolve messages.\n"
                },
                "frequency": {
                    "type": "string",
                    "description": "Frequency of alert reminders. Frequency must be set if reminders are enabled.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Is this the default channel for all your alerts.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the alert notification channel.\n"
                },
                "secureSettings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Additional secure settings, for full reference lookup [Grafana Supported Settings\ndocumentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).\n"
                },
                "sendReminder": {
                    "type": "boolean",
                    "description": "Whether to send reminders for triggered alerts.\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Additional settings, for full reference see [Grafana HTTP API\ndocumentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the alert notification channel.\n"
                },
                "uid": {
                    "type": "string",
                    "description": "Unique identifier. If unset, this will be automatically generated.\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertNotification resources.\n",
                "properties": {
                    "disableResolveMessage": {
                        "type": "boolean",
                        "description": "Whether to disable sending resolve messages.\n"
                    },
                    "frequency": {
                        "type": "string",
                        "description": "Frequency of alert reminders. Frequency must be set if reminders are enabled.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Is this the default channel for all your alerts.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the alert notification channel.\n"
                    },
                    "secureSettings": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Additional secure settings, for full reference lookup [Grafana Supported Settings\ndocumentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).\n"
                    },
                    "sendReminder": {
                        "type": "boolean",
                        "description": "Whether to send reminders for triggered alerts.\n"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Additional settings, for full reference see [Grafana HTTP API\ndocumentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the alert notification channel.\n"
                    },
                    "uid": {
                        "type": "string",
                        "description": "Unique identifier. If unset, this will be automatically generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/builtinRoleAssignment:BuiltinRoleAssignment": {
            "properties": {
                "builtinRole": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/BuiltinRoleAssignmentRole:BuiltinRoleAssignmentRole"
                    }
                }
            },
            "required": [
                "builtinRole",
                "roles"
            ],
            "inputProperties": {
                "builtinRole": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/BuiltinRoleAssignmentRole:BuiltinRoleAssignmentRole"
                    }
                }
            },
            "requiredInputs": [
                "builtinRole",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BuiltinRoleAssignment resources.\n",
                "properties": {
                    "builtinRole": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/grafana:index/BuiltinRoleAssignmentRole:BuiltinRoleAssignmentRole"
                        }
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/dashboard:Dashboard": {
            "properties": {
                "configJson": {
                    "type": "string",
                    "description": "The complete dashboard model JSON.\n"
                },
                "dashboardId": {
                    "type": "integer",
                    "description": "The numeric ID of the dashboard computed by Grafana.\n"
                },
                "folder": {
                    "type": "integer",
                    "description": "The id of the folder to save the dashboard in.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "URL friendly version of the dashboard title.\n"
                }
            },
            "required": [
                "configJson",
                "dashboardId",
                "slug"
            ],
            "inputProperties": {
                "configJson": {
                    "type": "string",
                    "description": "The complete dashboard model JSON.\n"
                },
                "folder": {
                    "type": "integer",
                    "description": "The id of the folder to save the dashboard in.\n"
                }
            },
            "requiredInputs": [
                "configJson"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "configJson": {
                        "type": "string",
                        "description": "The complete dashboard model JSON.\n"
                    },
                    "dashboardId": {
                        "type": "integer",
                        "description": "The numeric ID of the dashboard computed by Grafana.\n"
                    },
                    "folder": {
                        "type": "integer",
                        "description": "The id of the folder to save the dashboard in.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "URL friendly version of the dashboard title.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/dashboardPermission:DashboardPermission": {
            "properties": {
                "dashboardId": {
                    "type": "integer",
                    "description": "ID of the dashboard to apply permissions to.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/DashboardPermissionPermission:DashboardPermissionPermission"
                    },
                    "description": "The permission items to add/update. Items that are omitted from the list will be removed.\n"
                }
            },
            "required": [
                "dashboardId",
                "permissions"
            ],
            "inputProperties": {
                "dashboardId": {
                    "type": "integer",
                    "description": "ID of the dashboard to apply permissions to.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/DashboardPermissionPermission:DashboardPermissionPermission"
                    },
                    "description": "The permission items to add/update. Items that are omitted from the list will be removed.\n"
                }
            },
            "requiredInputs": [
                "dashboardId",
                "permissions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardPermission resources.\n",
                "properties": {
                    "dashboardId": {
                        "type": "integer",
                        "description": "ID of the dashboard to apply permissions to.\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/grafana:index/DashboardPermissionPermission:DashboardPermissionPermission"
                        },
                        "description": "The permission items to add/update. Items that are omitted from the list will be removed.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/dataSource:DataSource": {
            "properties": {
                "accessMode": {
                    "type": "string",
                    "description": "The method by which Grafana will access the data source: `proxy` or `direct`.\n"
                },
                "basicAuthEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable basic auth for the data source.\n"
                },
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Basic auth password.\n"
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Basic auth username.\n"
                },
                "databaseName": {
                    "type": "string",
                    "description": "(Required by some data source types) The name of the database to use on the selected data source server.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether to set the data source as default. This should only be `true` to a single data source.\n"
                },
                "jsonDatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/DataSourceJsonData:DataSourceJsonData"
                    },
                    "description": "(Required by some data source types)\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique name for the data source.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Required by some data source types) The password to use to authenticate to the data source.\n"
                },
                "secureJsonDatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/DataSourceSecureJsonData:DataSourceSecureJsonData"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The data source type. Must be one of the supported data source keywords.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the data source. The type of URL required varies depending on the chosen data source type.\n"
                },
                "username": {
                    "type": "string",
                    "description": "(Required by some data source types) The username to use to authenticate to the data source.\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "accessMode": {
                    "type": "string",
                    "description": "The method by which Grafana will access the data source: `proxy` or `direct`.\n"
                },
                "basicAuthEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable basic auth for the data source.\n"
                },
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Basic auth password.\n"
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Basic auth username.\n"
                },
                "databaseName": {
                    "type": "string",
                    "description": "(Required by some data source types) The name of the database to use on the selected data source server.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether to set the data source as default. This should only be `true` to a single data source.\n"
                },
                "jsonDatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/DataSourceJsonData:DataSourceJsonData"
                    },
                    "description": "(Required by some data source types)\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique name for the data source.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Required by some data source types) The password to use to authenticate to the data source.\n"
                },
                "secureJsonDatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/DataSourceSecureJsonData:DataSourceSecureJsonData"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The data source type. Must be one of the supported data source keywords.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the data source. The type of URL required varies depending on the chosen data source type.\n"
                },
                "username": {
                    "type": "string",
                    "description": "(Required by some data source types) The username to use to authenticate to the data source.\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DataSource resources.\n",
                "properties": {
                    "accessMode": {
                        "type": "string",
                        "description": "The method by which Grafana will access the data source: `proxy` or `direct`.\n"
                    },
                    "basicAuthEnabled": {
                        "type": "boolean",
                        "description": "Whether to enable basic auth for the data source.\n"
                    },
                    "basicAuthPassword": {
                        "type": "string",
                        "description": "Basic auth password.\n"
                    },
                    "basicAuthUsername": {
                        "type": "string",
                        "description": "Basic auth username.\n"
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "(Required by some data source types) The name of the database to use on the selected data source server.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Whether to set the data source as default. This should only be `true` to a single data source.\n"
                    },
                    "jsonDatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/grafana:index/DataSourceJsonData:DataSourceJsonData"
                        },
                        "description": "(Required by some data source types)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for the data source.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "(Required by some data source types) The password to use to authenticate to the data source.\n"
                    },
                    "secureJsonDatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/grafana:index/DataSourceSecureJsonData:DataSourceSecureJsonData"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "The data source type. Must be one of the supported data source keywords.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL for the data source. The type of URL required varies depending on the chosen data source type.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "(Required by some data source types) The username to use to authenticate to the data source.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/folder:Folder": {
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title of the folder.\n"
                },
                "uid": {
                    "type": "string",
                    "description": "Unique identifier.\n"
                }
            },
            "required": [
                "title",
                "uid"
            ],
            "inputProperties": {
                "title": {
                    "type": "string",
                    "description": "The title of the folder.\n"
                }
            },
            "requiredInputs": [
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Folder resources.\n",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the folder.\n"
                    },
                    "uid": {
                        "type": "string",
                        "description": "Unique identifier.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/folderPermission:FolderPermission": {
            "properties": {
                "folderUid": {
                    "type": "string",
                    "description": "The UID of the folder.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/FolderPermissionPermission:FolderPermissionPermission"
                    },
                    "description": "The permission items to add/update. Items that are omitted from the list will be removed.\n"
                }
            },
            "required": [
                "folderUid",
                "permissions"
            ],
            "inputProperties": {
                "folderUid": {
                    "type": "string",
                    "description": "The UID of the folder.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/FolderPermissionPermission:FolderPermissionPermission"
                    },
                    "description": "The permission items to add/update. Items that are omitted from the list will be removed.\n"
                }
            },
            "requiredInputs": [
                "folderUid",
                "permissions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FolderPermission resources.\n",
                "properties": {
                    "folderUid": {
                        "type": "string",
                        "description": "The UID of the folder.\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/grafana:index/FolderPermissionPermission:FolderPermissionPermission"
                        },
                        "description": "The permission items to add/update. Items that are omitted from the list will be removed.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/organization:Organization": {
            "properties": {
                "adminUser": {
                    "type": "string",
                    "description": "The login name of the configured default admin user for the Grafana installation. If unset, this value defaults to\nadmin, the Grafana default. Grafana adds the default admin user to all organizations automatically upon creation, and\nthis parameter keeps Terraform from removing it from organizations.\n"
                },
                "admins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses corresponding to users who should be given admin access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                },
                "createUsers": {
                    "type": "boolean",
                    "description": "Whether or not to create Grafana users specified in the organization's membership if they don't already exist in\nGrafana. If unspecified, this parameter defaults to true, creating placeholder users with the name, login, and email set\nto the email of the user, and a random password. Setting this option to false will cause an error to be thrown for any\nusers that do not already exist in Grafana.\n"
                },
                "editors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses corresponding to users who should be given editor access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name for the Grafana organization created.\n"
                },
                "orgId": {
                    "type": "integer",
                    "description": "The organization id assigned to this organization by Grafana.\n"
                },
                "viewers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses corresponding to users who should be given viewer access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                }
            },
            "required": [
                "name",
                "orgId"
            ],
            "inputProperties": {
                "adminUser": {
                    "type": "string",
                    "description": "The login name of the configured default admin user for the Grafana installation. If unset, this value defaults to\nadmin, the Grafana default. Grafana adds the default admin user to all organizations automatically upon creation, and\nthis parameter keeps Terraform from removing it from organizations.\n"
                },
                "admins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses corresponding to users who should be given admin access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                },
                "createUsers": {
                    "type": "boolean",
                    "description": "Whether or not to create Grafana users specified in the organization's membership if they don't already exist in\nGrafana. If unspecified, this parameter defaults to true, creating placeholder users with the name, login, and email set\nto the email of the user, and a random password. Setting this option to false will cause an error to be thrown for any\nusers that do not already exist in Grafana.\n"
                },
                "editors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses corresponding to users who should be given editor access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name for the Grafana organization created.\n"
                },
                "viewers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses corresponding to users who should be given viewer access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Organization resources.\n",
                "properties": {
                    "adminUser": {
                        "type": "string",
                        "description": "The login name of the configured default admin user for the Grafana installation. If unset, this value defaults to\nadmin, the Grafana default. Grafana adds the default admin user to all organizations automatically upon creation, and\nthis parameter keeps Terraform from removing it from organizations.\n"
                    },
                    "admins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of email addresses corresponding to users who should be given admin access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                    },
                    "createUsers": {
                        "type": "boolean",
                        "description": "Whether or not to create Grafana users specified in the organization's membership if they don't already exist in\nGrafana. If unspecified, this parameter defaults to true, creating placeholder users with the name, login, and email set\nto the email of the user, and a random password. Setting this option to false will cause an error to be thrown for any\nusers that do not already exist in Grafana.\n"
                    },
                    "editors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of email addresses corresponding to users who should be given editor access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for the Grafana organization created.\n"
                    },
                    "orgId": {
                        "type": "integer",
                        "description": "The organization id assigned to this organization by Grafana.\n"
                    },
                    "viewers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of email addresses corresponding to users who should be given viewer access to the organization. Note: users\nspecified here must already exist in Grafana unless 'create_users' is set to true.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/role:Role": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/RolePermission:RolePermission"
                    }
                },
                "uid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "uid",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/grafana:index/RolePermission:RolePermission"
                    }
                },
                "uid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "global": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/grafana:index/RolePermission:RolePermission"
                        }
                    },
                    "uid": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/team:Team": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address for the team.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses corresponding to users who should be given membership to the team. Note: users specified here\nmust already exist in Grafana.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name for the Grafana team created.\n"
                },
                "teamId": {
                    "type": "integer",
                    "description": "The team id assigned to this team by Grafana.\n"
                }
            },
            "required": [
                "name",
                "teamId"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "An email address for the team.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses corresponding to users who should be given membership to the team. Note: users specified here\nmust already exist in Grafana.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name for the Grafana team created.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "An email address for the team.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of email addresses corresponding to users who should be given membership to the team. Note: users specified here\nmust already exist in Grafana.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for the Grafana team created.\n"
                    },
                    "teamId": {
                        "type": "integer",
                        "description": "The team id assigned to this team by Grafana.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/teamPreferences:TeamPreferences": {
            "properties": {
                "homeDashboardId": {
                    "type": "integer",
                    "description": "The numeric ID of the dashboard to display when a team member logs in.\n"
                },
                "teamId": {
                    "type": "integer",
                    "description": "The numeric team ID.\n"
                },
                "theme": {
                    "type": "string",
                    "description": "The theme for the specified team. Available themes are `light`, `dark`, or an empty string for the default theme.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the specified team. Available values are `utc`, `browser`, or an empty string for the default.\n"
                }
            },
            "required": [
                "teamId"
            ],
            "inputProperties": {
                "homeDashboardId": {
                    "type": "integer",
                    "description": "The numeric ID of the dashboard to display when a team member logs in.\n"
                },
                "teamId": {
                    "type": "integer",
                    "description": "The numeric team ID.\n"
                },
                "theme": {
                    "type": "string",
                    "description": "The theme for the specified team. Available themes are `light`, `dark`, or an empty string for the default theme.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the specified team. Available values are `utc`, `browser`, or an empty string for the default.\n"
                }
            },
            "requiredInputs": [
                "teamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamPreferences resources.\n",
                "properties": {
                    "homeDashboardId": {
                        "type": "integer",
                        "description": "The numeric ID of the dashboard to display when a team member logs in.\n"
                    },
                    "teamId": {
                        "type": "integer",
                        "description": "The numeric team ID.\n"
                    },
                    "theme": {
                        "type": "string",
                        "description": "The theme for the specified team. Available themes are `light`, `dark`, or an empty string for the default theme.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone for the specified team. Available values are `utc`, `browser`, or an empty string for the default.\n"
                    }
                },
                "type": "object"
            }
        },
        "grafana:index/user:User": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address of the Grafana user.\n"
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Whether to make user an admin.\n"
                },
                "login": {
                    "type": "string",
                    "description": "The username for the Grafana user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name for the Grafana user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Grafana user.\n"
                }
            },
            "required": [
                "email",
                "name",
                "password"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "The email address of the Grafana user.\n"
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Whether to make user an admin.\n"
                },
                "login": {
                    "type": "string",
                    "description": "The username for the Grafana user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name for the Grafana user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Grafana user.\n"
                }
            },
            "requiredInputs": [
                "email",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address of the Grafana user.\n"
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "description": "Whether to make user an admin.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "The username for the Grafana user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for the Grafana user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the Grafana user.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-grafana/sdk/go/grafana"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing grafana cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-grafana)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-grafana` repo](https://github.com/pulumi/pulumi-grafana/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-grafana` repo](https://github.com/terraform-providers/terraform-provider-grafana/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-grafana)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-grafana` repo](https://github.com/pulumi/pulumi-grafana/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-grafana` repo](https://github.com/terraform-providers/terraform-provider-grafana/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}